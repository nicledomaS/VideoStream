name: C/C++ CI

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        configs: [Release, Debug]
    steps:
    - name: Checkout
      uses: actions/checkout@v2.0.0
    - name: Install libva-dev linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update && sudo apt-get install -yq libboost-all-dev libva-dev libvdpau-dev libx11-dev \
        libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev libxcomposite-dev \
        libxcursor-dev libxdamage-dev libxdmcp-dev libxext-dev libxfixes-dev libxi-dev libxinerama-dev \
        libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxrender-dev libxres-dev \
        libxss-dev libxt-dev libxtst-dev libxv-dev libxvmc-dev libxxf86vm-dev xtrans-dev \
        libxcb-render0-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev \
        libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev \
        libxcb-xinerama0-dev xkb-data libxcb-dri3-dev uuid-dev libxcb-util0-dev
    - name: Install conan
      run: |
        python3 -m pip install --upgrade pip
        pip3 install conan
        pip3 install conan --upgrade
        conan --version
        conan profile new default --detect
    - name: Update conan profile linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        conan profile update settings.compiler.libcxx=libstdc++11 default
    - name: Build project
      uses: nicledomaS/cmake_build_action@v1.4
      with:
        config: ${{ matrix.configs }}
        submodule_update: ON
        run_tests: ON
        unit_test_build: -DFIND_TESTS=ON
        cmake_args: -DFIND_CONAN=ON;-DFIND_MODULES=ON;-DENABLE_TIDY=ON
        create_package: ON
    - uses: actions/upload-artifact@v2
      with:
        path: build/*.tar.gz
        name: artifact_${{ matrix.os }}_${{ matrix.configs }}.tar.gz
